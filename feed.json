{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript",
    "description": "",
    "home_page_url": "https://kendarkmode.github.io/myblog1",
    "feed_url": "https://kendarkmode.github.io/myblog1/feed.json",
    "user_comment": "",
    "author": {
        "name": "Nguyen Anh Kiet"
    },
    "items": [
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-9-su-dung-su-kien-event-trong-javascript.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-9-su-dung-su-kien-event-trong-javascript.html",
            "title": "Bài 9: Sử Dụng Sự Kiện (Event) trong JavaScript",
            "summary": "Chào mừng bạn đến với thế giới huyền diệu của sự kiện (Event) trong JavaScript! Nếu bạn đã thử dùng JavaScript để thay đổi nội dung, thay đổi phong cách trang web, thì hôm nay bạn sẽ làm quen với cách biến các hành động&hellip;",
            "content_html": "<p>Chào mừng bạn đến với thế giới huyền diệu của <strong>sự kiện (Event)</strong> trong JavaScript! Nếu bạn đã thử dùng JavaScript để thay đổi nội dung, thay đổi phong cách trang web, thì hôm nay bạn sẽ làm quen với cách biến các hành động của người dùng (như nhấp chuột, di chuyển chuột, ấn phím) thành những hành động thần kỳ để trang web của bạn trở nên siêu hấp dẫn. Cùng làm quen với một số \"hành động bí ẩn\" này nào!</p>\n<h3>1. <strong>Sự Kiện (Event) là gì? – Để Web Cảm Nhận Thế Giới Xung</strong><strong> Quanh</strong></h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://st2.depositphotos.com/1043532/12198/i/450/depositphotos_121987916-stock-photo-planet-earth-with-drawn-houses.jpg\" alt=\"Mans hand holding cartoon funny monster going to attack city put around the  globe on — Stock Photo © gearstd #140126772\" width=\"600\" height=\"556\" data-is-external-image=\"true\"></figure>\n<p> </p>\n<p>Như tên gọi của nó, <strong>Event</strong> là các sự kiện hoặc hành động mà người dùng thực hiện trên trang web của bạn. Đó có thể là một cú click chuột, di chuột qua một phần tử, hay thậm chí ấn phím trên bàn phím. JavaScript sẽ giúp trang web phản ứng lại những hành động này, giống như bạn lập trình một nhân vật trong game và yêu cầu nhân vật đó nhảy lên khi ai đó nhấn phím hoặc click chuột.</p>\n<p>Chỉ với vài câu lệnh JavaScript, bạn có thể khiến trang web của mình trở nên tương tác như một lễ hội trực tuyến! Thay vì để người dùng \"đứng yên\", bạn khiến họ cảm nhận được sự sống động của web. Cùng tìm hiểu các loại sự kiện phổ biến trong JavaScript nhé!</p>\n<h3>2. <strong>Các Loại Sự Kiện (Event) Cần Biết – Những Cú Chạm Quái Kiệt</strong></h3>\n<p>Dưới đây là ba loại <strong>sự kiện</strong> cực kỳ phổ biến mà bạn cần phải nắm rõ. Đây chính là \"sức mạnh\" giúp bạn làm trang web thêm phần vui nhộn:</p>\n<h4><strong>Event Click – Cú Nhấp Chuột Mê Hoặc!</strong></h4>\n<p>Đây chính là <strong>sự kiện</strong> mà ai cũng gặp khi duyệt web – một cú nhấp chuột từ người dùng. JavaScript có thể phản hồi lại những cú click này và thực hiện một hành động nào đó, chẳng hạn thay đổi nội dung, mở cửa sổ pop-up hay thực hiện thao tác khác.</p>\n<p>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;<br>&lt;html lang=\"en\"&gt;<br>&lt;head&gt;<br>  &lt;meta charset=\"UTF-8\"&gt;<br>  &lt;title&gt;Click Event Example&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;button onclick=\"changeMessage()\"&gt;Click me if you dare!&lt;/button&gt;<br>  &lt;p id=\"message\"&gt;Nhấn nút trên để thấy phép thuật!&lt;/p&gt;<br><br>  &lt;script&gt;<br>    function changeMessage() {<br>      document.getElementById(\"message\").innerHTML = \"Chúc mừng bạn đã khám phá ra bí mật!\";<br>    }<br>  &lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Ở đây, khi người dùng <strong>click</strong> vào nút, một thông điệp kỳ diệu sẽ xuất hiện. Một phép thuật rất dễ làm mà bạn có thể áp dụng để tạo sự tương tác trong web của mình.</p>\n<h3>Event Mouseover – Đến Sức Mạnh Của Cái Chuột!</h3>\n<p>Đừng bỏ qua sự kiện này nếu bạn muốn tạo ra những hiệu ứng độc đáo! Khi người dùng <strong>di chuột qua</strong> một phần tử cụ thể, bạn có thể làm cho phần tử đó thay đổi màu sắc, phóng to lên, hoặc làm gì đó hấp dẫn hơn.</p>\n<p>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;<br>&lt;html lang=\"en\"&gt;<br>&lt;head&gt;<br>  &lt;meta charset=\"UTF-8\"&gt;<br>  &lt;title&gt;Mouseover Event Example&lt;/title&gt;<br>  &lt;style&gt;<br>    #hoverBox {<br>      width: 150px;<br>      height: 150px;<br>      background-color: blue;<br>      color: white;<br>      display: flex;<br>      justify-content: center;<br>      align-items: center;<br>      font-size: 20px;<br>    }<br>  &lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br><br>  &lt;div id=\"hoverBox\" onmouseover=\"changeColor()\"&gt;Di chuột vào đây!&lt;/div&gt;<br><br>  &lt;script&gt;<br>    function changeColor() {<br>      document.getElementById(\"hoverBox\").style.backgroundColor = \"red\";<br>      document.getElementById(\"hoverBox\").innerHTML = \"Bạn đã chiến thắng!\";<br>    }<br>  &lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Khi bạn di chuột vào ô màu xanh, màu của ô sẽ chuyển thành đỏ và xuất hiện thông báo. Giống như có phép màu biến ô đó thành một phần tử \"hấp dẫn\" hơn trong nháy mắt!</p>\n<h4><strong>Event Keypress – Khi Các Phím Tạo Ra Phép Màu</strong></h4>\n<p>Làm sao để web phản hồi khi người dùng nhấn phím? Đúng rồi, bạn chỉ cần sử dụng <strong>keypress event</strong>! Khi người dùng nhấn phím trên bàn phím, JavaScript có thể nhận diện và thực hiện một hành động. Bạn có thể xây dựng những trò chơi tương tác hay ngay lập tức thực hiện các chức năng tùy chỉnh khi một phím được nhấn.</p>\n<p>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;</code><br><code>&lt;html lang=\"en\"&gt;</code><br><code>&lt;head&gt;</code><br><code>  &lt;meta charset=\"UTF-8\"&gt;</code><br><code>  &lt;title&gt;Keypress Event Example&lt;/title&gt;</code><br><code>&lt;/head&gt;</code><br><code>&lt;body&gt;</code><br><br><code>  &lt;p id=\"keyMessage\"&gt;Hãy nhấn bất kỳ phím nào để bắt đầu!&lt;/p&gt;</code><br><br><code>  &lt;script&gt;</code><br><code>    document.body.addEventListener(\"keypress\", function(event) {</code><br><code>      document.getElementById(\"keyMessage\").innerHTML = \"Phím \" + event.key + \" vừa được nhấn!\";</code><br><code>    });</code><br><code>  &lt;/script&gt;</code><br><code>&lt;/body&gt;</code><br><code>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Khi bạn nhấn phím bất kỳ, bạn sẽ thấy thông báo phím đó đã được nhấn. Đây chính là sự kiện tuyệt vời cho các ứng dụng bàn phím như game, form hay nhiều loại tương tác khác!</p>\n<h3>3. <strong>Ví Dụ: Form Validation – Bảo Vệ Trang Web Như \"Siêu Anh Hùng\"</strong></h3>\n<p>Giờ chúng ta sẽ thực hiện một ví dụ hài hước và hữu ích với <strong>form validation</strong>. Giả sử bạn có một form đăng ký người dùng và muốn đảm bảo người dùng nhập đủ thông tin </p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;</code><br><code>&lt;html lang=\"en\"&gt;</code><br><code>&lt;head&gt;</code><br><code>  &lt;meta charset=\"UTF-8\"&gt;</code><br><code>  &lt;title&gt;Form Validation Example&lt;/title&gt;</code><br><code>&lt;/head&gt;</code><br><code>&lt;body&gt;</code><br><br><code>  &lt;form id=\"registrationForm\"&gt;</code><br><code>    &lt;input type=\"text\" id=\"name\" placeholder=\"Nhập tên của bạn\"&gt;</code><br><code>    &lt;button type=\"submit\"&gt;Đăng ký&lt;/button&gt;</code><br><code>  &lt;/form&gt;</code><br><br><code>  &lt;p id=\"validationMessage\"&gt;&lt;/p&gt;</code><br><br><code>  &lt;script&gt;</code><br><code>    document.getElementById(\"registrationForm\").addEventListener(\"submit\", function(event) {</code><br><code>      let name = document.getElementById(\"name\").value;</code><br><code>      if (!name) {</code><br><code>        event.preventDefault(); // Ngừng gửi form nếu chưa nhập tên</code><br><code>        document.getElementById(\"validationMessage\").innerHTML = \"Tên không thể trống! Hãy nhập tên của bạn!\";</code><br><code>      }</code><br><code>    });</code><br><code>  &lt;/script&gt;</code><br><code>  </code><br><code>&lt;/body&gt;</code><br><code>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Khi người dùng chưa nhập tên và nhấn \"Đăng ký,\" JavaScript sẽ ngăn không cho form gửi và yêu cầu nhập tên. Đúng là \"siêu anh hùng bảo vệ dữ liệu,\" phải không nào?</p>\n<div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\">\n<div class=\"sticky top-9 md:top-[5.75rem]\">\n<div class=\"absolute bottom-0 right-2 flex h-9 items-center\">\n<div> </div>\n<div>\n<h3>4. <strong>Ví Dụ: Counter Button – Đếm Càng Nhiều, Cười Càng To!</strong></h3>\n<p>Cuối cùng, để làm thêm phần vui nhộn, chúng ta sẽ xây dựng một <strong>counter button</strong> (nút đếm số) cực kỳ dễ thương và siêu tiện lợi. Đây là ví dụ tuyệt vời để học cách xử lý sự kiện <code>click</code> trong JavaScript!</p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;<br>&lt;html lang=\"en\"&gt;<br>&lt;head&gt;<br>  &lt;meta charset=\"UTF-8\"&gt;<br>  &lt;title&gt;Counter Button Example&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br><br>  &lt;p id=\"counter\"&gt;Số lần nhấn: 0&lt;/p&gt;<br>  &lt;button onclick=\"incrementCounter()\"&gt;Click để đếm!&lt;/button&gt;<br><br>  &lt;script&gt;<br>    let count = 0;<br><br>    function incrementCounter() {<br>      count++;<br>      document.getElementById(\"counter\").innerHTML = \"Số lần nhấn: \" + count;<br>    }<br>  &lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Với mỗi cú nhấp chuột vào nút \"Click để đếm,\" số lần nhấn sẽ tăng lên. Ai mà ngừng nhấn lại được chứ? Đây sẽ là công cụ hoàn hảo cho các ứng dụng thú vị!</p>\n<h3>5. <strong>Kết Luận – Cảm Nhận Cách Mà Web Thở!</strong></h3>\n<p>Vậy là bạn đã tìm hiểu về các sự kiện JavaScript! Chắc chắn giờ bạn có thể bắt đầu tạo những trang web <strong>tương tác</strong>, nơi người dùng không chỉ đọc mà còn tham gia vào câu chuyện bạn kể qua các nút bấm, hành động chuột và phím gõ. JavaScript đã cho bạn một công cụ tuyệt vời để thổi hồn vào trang web – giúp nó trở nên sống động và thân thiện hơn bao giờ hết!</p>\n<p>Hãy tiếp tục khám phá những bí ẩn khác của web, bởi bạn chỉ mới bắt đầu hành trình của mình trong thế giới kỳ diệu của JavaScript!</p>\n</div>\n<div> </div>\n<div> </div>\n<div> </div>\n<div> </div>\n<div> </div>\n<div> </div>\n</div>\n</div>\n<div class=\"overflow-y-auto p-4\" dir=\"ltr\"> </div>\n</div>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-29T11:51:58+07:00",
            "date_modified": "2024-12-31T07:36:46+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-8-dom-manipulation-trong-javascript.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-8-dom-manipulation-trong-javascript.html",
            "title": "Bài 8: DOM Manipulation trong JavaScript",
            "summary": "Chào bạn, người đã sẵn sàng bước vào thế giới \"phép thuật\" của JavaScript! Nếu bạn đã từng tưởng tượng mình có thể thay đổi bất cứ điều gì trên một trang web, thì hôm nay là ngày tuyệt vời để bắt đầu thực hiện&hellip;",
            "content_html": "<p> </p>\n<p>Chào bạn, người đã sẵn sàng bước vào thế giới \"phép thuật\" của JavaScript! Nếu bạn đã từng tưởng tượng mình có thể thay đổi bất cứ điều gì trên một trang web, thì hôm nay là ngày tuyệt vời để bắt đầu thực hiện ước mơ đó với <strong>DOM Manipulation</strong>. Đúng vậy, giờ bạn sẽ biết cách dùng JavaScript để tác động trực tiếp vào nội dung và cấu trúc của trang web. Đọc tiếp, vì bài viết này không chỉ đơn thuần là lý thuyết đâu, mà đầy những ví dụ thực tế, hài hước và có phần kỳ diệu nữa!</p>\n<h3>1. <strong>DOM là gì? – \"Nhìn Có Vẻ Khó Nhưng Rất Dễ Hiểu\"</strong></h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://media.istockphoto.com/id/1162105346/vector/vector-cartoon-of-man-or-businessman-deciding-and-balancing-between-easy-and-hard-ways.jpg?s=612x612&amp;w=0&amp;k=20&amp;c=6jg20k9jAm02jzxYQbamVRVbAn06SDxJmRzJaCmzfFw=\" alt=\"280+ Thinking Hard Funny Stock Photos, Pictures &amp; Royalty-Free Images -  iStock\" width=\"464\" height=\"521\" data-is-external-image=\"true\"></figure>\n<p>Đầu tiên, bạn cần hiểu “DOM” là gì. Bạn đã nghe nói đến HTML và CSS, đúng không? HTML là phần khung của trang web, và CSS là người phụ trách trang trí cho nó. Nhưng… nếu muốn tương tác và thay đổi những gì bạn thấy trên trang web khi chạy, bạn sẽ cần <strong>DOM</strong>, viết tắt của <strong>Document Object Model</strong>.</p>\n<p>Hãy tưởng tượng rằng trang web của bạn giống như một cây thông với nhiều nhánh. Cây này có các nhánh là các phần tử HTML, như thẻ <code>&lt;div&gt;</code>, <code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code>, v.v., và tất cả đều có thể được JavaScript thao tác dễ dàng thông qua DOM.</p>\n<p>Khi trang web của bạn được tải, DOM chính là bản đồ cấu trúc của trang. JavaScript có thể sử dụng DOM để tìm kiếm các phần tử, thay đổi nội dung, hay thậm chí tạo mới các phần tử.</p>\n<h3>2. <strong>Truy Cập và Thay Đổi Nội Dung HTML bằng JavaScript</strong></h3>\n<p> </p>\n<p>Đến phần thú vị nhất! Giờ đây, bạn có thể dễ dàng truy cập và thay đổi nội dung HTML ngay trong trang web chỉ bằng JavaScript và DOM. Cách thức rất đơn giản mà vẫn đầy quyền năng. Chỉ với vài câu lệnh, bạn có thể thay đổi một câu chào, thay đổi màu sắc của các phần tử, hoặc thậm chí ẩn đi những phần bạn không thích!</p>\n<h4><strong>A. Truy Cập Phần Tử HTML Bằng JavaScript</strong></h4>\n<p>Đầu tiên, để có thể \"chạm tay\" vào các phần tử HTML, bạn cần phải tìm chúng. JavaScript cung cấp một số phương thức để bạn tìm kiếm các phần tử trên trang.</p>\n<ol>\n<li><strong><code>getElementById</code></strong>: Tìm kiếm một phần tử theo ID</li>\n<li><strong><code>getElementsByClassName</code></strong>: Tìm kiếm các phần tử theo lớp</li>\n<li><strong><code>querySelector</code></strong>: Tìm kiếm phần tử bằng CSS selector (dễ dùng và đa năng hơn!)</li>\n</ol>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;</code><br><code>&lt;html&gt;</code><br><code>&lt;head&gt;</code><br><code>  &lt;title&gt;DOM Manipulation&lt;/title&gt;</code><br><code>&lt;/head&gt;</code><br><code>&lt;body&gt;</code><br><code>  &lt;h1 id=\"title\"&gt;Chào mừng đến với DOM!&lt;/h1&gt;</code><br><code>  &lt;p class=\"intro\"&gt;Chúng ta sẽ cùng học cách thay đổi trang web này với JavaScript!&lt;/p&gt;</code><br><code>  &lt;button onclick=\"changeContent()\"&gt;Click để thay đổi nội dung&lt;/button&gt;</code><br><br><code>  &lt;script&gt;</code><br><code>    function changeContent() {</code><br><code>      // Thay đổi nội dung của thẻ h1</code><br><code>      document.getElementById(\"title\").innerHTML = \"Bây giờ là phần thú vị!\";</code><br><code>      </code><br><code>      // Thay đổi nội dung của thẻ p với class 'intro'</code><br><code>      document.getElementsByClassName(\"intro\")[0].innerHTML = \"Hãy nhìn xem, chúng ta đã thay đổi rồi!\";</code><br><code>    }</code><br><code>  &lt;/script&gt;</code><br><code>&lt;/body&gt;</code><br><code>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Với đoạn mã trên, khi bạn nhấn nút \"Click để thay đổi nội dung,\" JavaScript sẽ thay đổi nội dung của thẻ <code>&lt;h1&gt;</code> và <code>&lt;p&gt;</code>. Dễ như ăn kẹo, đúng không?</p>\n<h4><strong>B. Thay Đổi Phong Cách (CSS) Bằng JavaScript</strong></h4>\n<p>Một trong những ứng dụng tuyệt vời của DOM là thay đổi phong cách trực tiếp. Bằng cách truy cập vào các phần tử HTML, bạn có thể thay đổi màu sắc, kích thước, font chữ, và nhiều thứ khác mà không cần tải lại trang.</p>\n<p>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;</code><br><code>&lt;html&gt;</code><br><code>&lt;head&gt;</code><br><code>  &lt;title&gt;Thay Đổi Phong Cách với DOM&lt;/title&gt;</code><br><code>&lt;/head&gt;</code><br><code>&lt;body&gt;</code><br><code>  &lt;h1 id=\"title\"&gt;Chúng ta sẽ làm nó vui hơn!&lt;/h1&gt;</code><br><code>  &lt;button onclick=\"changeStyle()\"&gt;Click để thay đổi phong cách!&lt;/button&gt;</code><br><br><code>  &lt;script&gt;</code><br><code>    function changeStyle() {</code><br><code>      // Thay đổi màu chữ của h1</code><br><code>      document.getElementById(\"title\").style.color = \"red\";</code><br><code>      document.getElementById(\"title\").style.fontSize = \"40px\";</code><br><code>    }</code><br><code>  &lt;/script&gt;</code><br><code>&lt;/body&gt;</code><br><code>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Mỗi lần nhấn nút, màu chữ của tiêu đề sẽ đổi sang màu đỏ và kích thước chữ sẽ lớn hơn. Như vậy, chỉ một câu lệnh JavaScript có thể khiến trang web của bạn thay đổi một cách \"thần kỳ.\"</p>\n<h3>3. <strong>Ví Dụ Đơn Giản: Ấn Nút Để Thay Đổi Nội Dung Trang</strong></h3>\n<p>Bây giờ chúng ta sẽ thực hành một ví dụ vui nhộn hơn. Hãy tưởng tượng bạn đang xây dựng một trang web, và bạn muốn sau khi nhấn nút, một câu chúc trở nên ngọt ngào hơn!</p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>  &lt;title&gt;DOM Manipulation - Bài Tập Đơn Giản&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;h1 id=\"greeting\"&gt;Chào bạn! Chúc bạn một ngày tốt lành!&lt;/h1&gt;<br>  &lt;button onclick=\"changeGreeting()\"&gt;Chúc một ngày mới thật tuyệt vời!&lt;/button&gt;<br><br>  &lt;script&gt;<br>    function changeGreeting() {<br>      // Thay đổi câu chào khi nhấn nút<br>      document.getElementById(\"greeting\").innerHTML = \"Chúc bạn hôm nay thật tuyệt vời, vui vẻ, và đầy may mắn!\";<br>    }<br>  &lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \">Với ví dụ trên, khi bạn nhấn nút, lời chúc sẽ thay đổi thành một thông điệp dài và đẹp hơn. Bạn thấy không? Chỉ bằng một cú nhấp chuột và vài dòng mã JavaScript, bạn có thể khiến trang web của mình sinh động hơn bao giờ hết!</p>\n<h3>4. <strong>Kết Luận – Phép Màu với DOM!</strong></h3>\n<p>Chúc mừng bạn đã đến cuối bài viết! Bạn đã khám phá cách <strong>DOM Manipulation</strong> hoạt động như một phép màu trong JavaScript. Thật tuyệt vời phải không? Đừng tưởng tượng rằng bạn chỉ có thể thay đổi vài dòng văn bản thôi, bạn hoàn toàn có thể thao tác với cấu trúc của cả trang web.</p>\n<p>Với DOM, bạn có thể:</p>\n<ol>\n<li>Thay đổi nội dung văn bản</li>\n<li>Thêm, xóa hoặc sửa các phần tử HTML</li>\n<li>Tạo hiệu ứng động, thay đổi màu sắc hay font chữ mà không cần reload trang</li>\n<li>Thực hiện mọi thao tác như một <strong>phù thủy web</strong>, tạo ra những tác phẩm tuyệt vời chỉ với JavaScript và DOM!</li>\n</ol>\n<p>Giờ đây, bạn đã có một công cụ cực kỳ mạnh mẽ trong tay. Dùng chúng như một <strong>thầy phù thủy</strong> thật điêu luyện để biến trang web của bạn trở nên sống động, vui nhộn và cực kỳ hấp dẫn!</p>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-29T11:37:54+07:00",
            "date_modified": "2024-12-31T07:37:03+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-7-cac-kieu-du-lieu-va-cau-lenh-dieu-kien-trong-javascript.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-7-cac-kieu-du-lieu-va-cau-lenh-dieu-kien-trong-javascript.html",
            "title": "Bài 7: Các Kiểu Dữ Liệu và Câu Lệnh Điều Kiện trong JavaScript",
            "summary": "Chơi Cùng Dữ Liệu, Làm Chủ Điều Kiện Chào mừng bạn quay lại với thế giới đầy màu sắc của JavaScript! Nếu bạn đã khám phá qua vài bài viết về JS và cảm thấy thú vị, thì hôm nay chúng ta sẽ cùng tiếp&hellip;",
            "content_html": "<h1>Chơi Cùng Dữ Liệu, Làm Chủ Điều Kiện</h1>\n<p><img loading=\"lazy\" src=\"https://www.causeweb.org/cause/sites/default/files/resources/fun/cartoons/Data-Dice2014.jpg\" alt=\"aa cartoon with someone at a group of computers with fuzzy dice hanging from one and says: I just thought my data dashboard could use some fuzzy dice.\" data-is-external-image=\"true\"></p>\n<p>Chào mừng bạn quay lại với thế giới đầy màu sắc của JavaScript! Nếu bạn đã khám phá qua vài bài viết về JS và cảm thấy thú vị, thì hôm nay chúng ta sẽ cùng tiếp tục chuyến hành trình tìm hiểu về <strong>các kiểu dữ liệu</strong> và <strong>câu lệnh điều kiện</strong> trong JavaScript. Đừng lo, chúng ta sẽ không làm bạn buồn ngủ với các lý thuyết dài dòng đâu. Mọi thứ sẽ dễ hiểu và đầy vui nhộn, như một cuộc phiêu lưu kỳ thú với các chiến binh kiểu dữ liệu và những câu lệnh điều kiện. Hãy sẵn sàng!</p>\n<h3>1. <strong>Các Kiểu Dữ Liệu trong JavaScript - Nhân Vật Chính của</strong><strong> Chúng Ta</strong></h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcShrmAjb1iRiYw4rtberX7JTTKTdwVEdOffG45EaWUprCfxB2NNjsalcFqL_oeXVMzxZms&amp;usqp=CAU\" alt=\"Analytics Cartoons – Innovation Evangelism\" width=\"367\" height=\"372\" data-is-external-image=\"true\"></figure>\n<p>Trong bất kỳ ngôn ngữ lập trình nào, kiểu dữ liệu chính là \"hành trang\" giúp các biến làm việc. Còn trong JavaScript, chúng ta có một đội ngũ kiểu dữ liệu cực kỳ đa dạng và linh hoạt. Dưới đây là <strong>4 kiểu dữ liệu cơ bản</strong> bạn cần biết:</p>\n<h4><strong>A. String - Chuỗi văn bản (Như lời nói ngọt ngào)</strong></h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://us.123rf.com/450wm/kapitosh/kapitosh1912/kapitosh191200065/134625649-sweet-cartoon-funny-retro-candy-comic-font-explosion-isometric-text-shock-phrase-pop-art-colored.jpg?ver=6\" alt=\"Sweet Word Cliparts, Stock Vector and Royalty Free Sweet Word Illustrations\" width=\"450\" height=\"346\" data-is-external-image=\"true\"></figure>\n<p>String (chuỗi) là một kiểu dữ liệu chứa những ký tự, số, hoặc dấu cách được đặt trong dấu nháy đơn (<code>'</code>) hoặc dấu nháy kép (<code>\"</code>). Đơn giản thế thôi!</p>\n<p>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>let greeting = \"Chào bạn!\"; // Chuỗi chào mừng<br>let name = 'JavaScript'; // Tên ngôn ngữ lập trình yêu thích</code></p>\n<p class=\"msg msg--highlight \">Chắc chắn bạn cũng đã biết, String không chỉ dùng để nói chuyện đâu. Nó có thể làm mọi thứ từ việc thể hiện tên người dùng, thông điệp, đến việc tính toán với các chuỗi.</p>\n<h3>B. Number - Số (Đừng lo, đây không phải môn Toán đâu)</h3>\n<p><img loading=\"lazy\" src=\"https://www.ncuindia.edu/wp-content/uploads/2024/09/2-How-to-Beat.webp\" alt=\"How to Beat Mathematics Phobia\" data-is-external-image=\"true\"></p>\n<p>JavaScript xử lý số cả số nguyên (int) lẫn số thập phân (float), và chúng không có ký hiệu riêng biệt. Một số là một số, không cần phân biệt nguyên hay thập phân.<br>Ví dụ:</p>\n<p class=\"msg msg--highlight \">l<code>et age = 25; // Số nguyên</code><br><code>let temperature = 23.5; // Số thập phân</code></p>\n<p class=\"msg msg--highlight \"><strong>Lưu ý:</strong> Nếu bạn quên mất phép toán và kết quả bị \"điên loạn,\" JavaScript sẽ không nhắc nhở bạn đâu (vì nó “thân thiện” quá ấy mà).</p>\n<h4><strong>C. Boolean - Đúng hay Sai (Khi cuộc đời chỉ có 2 lựa chọn)</strong></h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://www.shutterstock.com/image-illustration/how-choose-600nw-118213816.jpg\" alt=\"Decision Funny Royalty-Free Images, Stock Photos &amp; Pictures | Shutterstock\" width=\"531\" height=\"600\" data-is-external-image=\"true\"></figure>\n<p>Boolean chỉ có 2 giá trị: <code>true</code> (đúng) và <code>false</code> (sai). Bạn sẽ dùng kiểu dữ liệu này khi cần quyết định giữa hai sự lựa chọn, giống như khi bạn đứng trước một chiếc bánh pizza và hỏi: \"Ăn hay không ăn?\"</p>\n<p>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>let isJavaScriptFun = true;  // Chắc chắn là có vui rồi!<br>let isNight = false;         // Không phải ban đêm!</code></p>\n<h4><strong>D. Object - Đối tượng (Như một chiếc rương chứa tất cả đồ đạc)</strong></h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://media.istockphoto.com/id/1224973211/vector/basic-rgb.jpg?s=612x612&amp;w=0&amp;k=20&amp;c=vc8AYS4Hp08Ul4RTolRdpZTrFuYUu4I5r05m_ASTsQ4=\" alt=\"380+ Wooden Pirate Treasure Chest Drawing Stock Illustrations, Royalty-Free  Vector Graphics &amp; Clip Art - iStock\" width=\"467\" height=\"467\" data-is-external-image=\"true\"></figure>\n<p>Object trong JavaScript giống như một chiếc rương chứa nhiều giá trị khác nhau, mỗi giá trị có thể thuộc các kiểu dữ liệu khác nhau. Object chứa các cặp \"key: value\" (khóa: giá trị) và thường được dùng để lưu trữ nhiều thông tin liên quan đến một thực thể.</p>\n<p class=\"msg msg--highlight \"><code>let person = {<br>  name: \"John\",<br>  age: 30,<br>  isStudent: false<br>};</code></p>\n<p class=\"msg msg--highlight \">Bạn có thể truy cập các giá trị trong object bằng cách dùng dấu chấm (<code>.</code>) hoặc dấu ngoặc vuông (<code>[]</code>). Nó như thể bạn đang tìm kho báu trong rương!</p>\n<div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\">\n<div class=\"sticky top-9 md:top-[5.75rem]\">\n<div class=\"absolute bottom-0 right-2 flex h-9 items-center\">\n<div class=\"flex items-center rounded bg-token-sidebar-surface-primary px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface-secondary\"> </div>\n<div>\n<h3>2. <strong>Câu Lệnh Điều Kiện trong JavaScript - Những Quyết Định Quan Trọng</strong></h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/11/idea-mew-3.png\" alt=\"\" width=\"713\" height=\"465\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-3-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-3-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-3-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-3-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-3-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-3-2xl.png 1920w\"></figure>\n<p>Bây giờ chúng ta sẽ chuyển sang phần \"kịch tính\" hơn: <strong>câu lệnh điều kiện</strong>. Câu lệnh điều kiện trong JavaScript giúp chúng ta đưa ra các quyết định, kiểu như khi bạn đứng trước lựa chọn \"dễ hay khó\" và phải ra quyết định. JavaScript có một vài cách để làm điều này, và dưới đây là những chiến binh nổi bật trong bộ sưu tập của chúng ta:</p>\n<h4><strong>A. Câu lệnh <code>if</code> - Quyết Định Đơn Giản</strong></h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/11/idea-mew-5.png\" alt=\"\" width=\"442\" height=\"336\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-5-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-5-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-5-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-5-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-5-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/idea-mew-5-2xl.png 1920w\"></figure>\n<p>Câu lệnh <code>if</code> là người đầu tiên chúng ta gặp trong các tình huống lựa chọn. Nó giúp bạn kiểm tra một điều kiện và nếu điều kiện đó là đúng (<code>true</code>), bạn sẽ thực hiện một hành động nào đó.</p>\n<p>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>let isHungry = true;<br>if (isHungry) {<br>  console.log(\"Đi ăn thôi!\");<br>}</code></p>\n<p class=\"msg msg--highlight \">Ở đây, nếu <code>isHungry</code> là <code>true</code>, JavaScript sẽ xuất ra câu \"Đi ăn thôi!\" Vậy là bạn có thể đi ăn bất cứ lúc nào khi cảm thấy đói!</p>\n<h4><strong>B. Câu lệnh <code>else</code> - Một Lựa Chọn Thay Thế</strong></h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://media.istockphoto.com/id/1472166606/vector/technology-automation-and-unemployment.jpg?s=612x612&amp;w=0&amp;k=20&amp;c=teQghsRo4hh5mxK--4Fj0emIjKDx1AHquXS4PsrZta0=\" alt=\"260+ Funny Replacement Stock Photos, Pictures &amp; Royalty-Free Images - iStock\" width=\"612\" height=\"576\" data-is-external-image=\"true\"></figure>\n<p>Nhưng nếu bạn không đói, thì sao? Đó là lúc câu lệnh <code>else</code> xuất hiện. Câu lệnh này giúp bạn xử lý tình huống khi điều kiện trong <code>if</code> không được thỏa mãn.</p>\n<p class=\"msg msg--highlight \"><code>let isHungry = false;</code><br><code>if (isHungry) {</code><br><code>  console.log(\"Đi ăn thôi!\");</code><br><code>} else {</code><br><code>  console.log(\"Chắc tôi ăn sau.\");</code><br><code>}</code></p>\n<p class=\"msg msg--highlight \">Vậy là nếu không đói, bạn có thể \"quay lưng\" với bữa ăn và tiếp tục công việc thôi!</p>\n<h4><strong>C. Câu lệnh <code>else if</code> - Khi Bạn Cần Nhiều Lựa Chọn</strong></h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://media.istockphoto.com/id/2102892427/vector/too-many-directions-to-make-decision.jpg?s=612x612&amp;w=0&amp;k=20&amp;c=YUkrUE4v2A96m4Eg-6gZ-Tl38_v2Nkv9T8MSLLzC7XU=\" alt=\"50+ Too Many Choices Stock Illustrations, Royalty-Free Vector Graphics &amp;  Clip Art - iStock | Too many options, Overwhelmed, Too much\" width=\"468\" height=\"351\" data-is-external-image=\"true\"></figure>\n<p>Khi có nhiều điều kiện cần kiểm tra, bạn không thể chỉ dùng <code>if</code> và <code>else</code>. Đây là lúc <code>else if</code> ra tay. Nó giúp bạn kiểm tra nhiều điều kiện khác nhau.</p>\n<p class=\"msg msg--highlight \"><code>let weather = \"rainy\";<br>if (weather === \"sunny\") {<br>  console.log(\"Mặc áo thun!\");<br>} else if (weather === \"rainy\") {<br>  console.log(\"Mang ô nhé!\");<br>} else {<br>  console.log(\"Mặc gì cũng được!\");<br>}</code></p>\n<p class=\"msg msg--highlight \">Dù trời nắng hay mưa, bạn luôn có một lựa chọn thời trang hợp lý.</p>\n<h4><strong>D. Câu lệnh <code>switch</code> - Khi Có Quá Nhiều Lựa Chọn</strong></h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/11/Screenshot-2024-12-29-112739-2.png\" alt=\"\" width=\"1022\" height=\"697\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/11/responsive/Screenshot-2024-12-29-112739-2-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/Screenshot-2024-12-29-112739-2-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/Screenshot-2024-12-29-112739-2-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/Screenshot-2024-12-29-112739-2-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/Screenshot-2024-12-29-112739-2-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/11/responsive/Screenshot-2024-12-29-112739-2-2xl.png 1920w\"></figure>\n<p>Câu lệnh <code>switch</code> là \"người hùng\" khi bạn có quá nhiều điều kiện cần xử lý và muốn làm cho mã dễ đọc hơn. Thay vì lặp đi lặp lại <code>else if</code>, bạn chỉ cần chọn một \"case\" tương ứng với điều kiện.</p>\n<p class=\"msg msg--highlight \"><code>let day = \"Monday\";<br>switch (day) {<br>  case \"Monday\":<br>    console.log(\"Ngày đầu tuần! Cố gắng nào!\");<br>    break;<br>  case \"Friday\":<br>    console.log(\"Ngày cuối tuần! Hãy vui vẻ!\");<br>    break;<br>  default:<br>    console.log(\"Ngày này không đặc biệt lắm.\");<br>}</code></p>\n<p class=\"msg msg--highlight \">Tùy vào giá trị của biến <code>day</code>, bạn sẽ nhận được thông điệp phù hợp. Điều tuyệt vời ở đây là bạn có thể thêm nhiều \"case\" để xử lý các tình huống khác nhau.</p>\n<div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\">\n<div class=\"sticky top-9 md:top-[5.75rem]\">\n<div class=\"absolute bottom-0 right-2 flex h-9 items-center\">\n<div class=\"flex items-center rounded bg-token-sidebar-surface-primary px-2 font-sans text-xs text-token-text-secondary dark:bg-token-main-surface-secondary\"> </div>\n<div> <span style=\"color: var(--headings-color); font-family: var(--font-base); font-size: 1.42383em; font-weight: var(--font-weight-bold); letter-spacing: var(--letter-spacing);\">3. </span><strong style=\"font-family: var(--font-base); font-size: 1.42383em; letter-spacing: var(--letter-spacing);\">Kết Luận</strong>\n<p>Giờ bạn đã hiểu rõ về <strong>các kiểu dữ liệu</strong> trong JavaScript và cách sử dụng <strong>các câu lệnh điều kiện</strong> như một chuyên gia rồi đấy! Chắc chắn rằng với bộ công cụ này, bạn sẽ tạo ra những ứng dụng và trang web cực kỳ thú vị và đầy sáng tạo.</p>\n<p>JavaScript không chỉ là một ngôn ngữ lập trình, nó còn giống như một người bạn đồng hành đầy mạnh mẽ, giúp bạn thực hiện mọi quyết định và hành động trên trang web. Từ việc xử lý dữ liệu, đưa ra quyết định, đến việc thực hiện các phép toán phức tạp – tất cả đều có thể được thực hiện chỉ với vài dòng mã.</p>\n<p>Và nhớ rằng, JavaScript không bao giờ làm bạn buồn tẻ – nó luôn có thể khiến mọi thứ trở nên thú vị!</p>\n</div>\n</div>\n</div>\n<div class=\"overflow-y-auto p-4\" dir=\"ltr\"> </div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"overflow-y-auto p-4\" dir=\"ltr\"> </div>\n</div>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-29T11:29:47+07:00",
            "date_modified": "2024-12-30T15:40:45+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-5-tinh-ke-thua-trong-java.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-5-tinh-ke-thua-trong-java.html",
            "title": "Bài 5: Tính kế thừa trong Java",
            "summary": "Tính kế thừa trong Java: Dựng \"extends\" và chuyện \"Con nhà người ta\" Khi nhắc đến kế thừa trong Java, đa phần chúng ta nghĩ ngay đến từ khóa extends. Từ khóa này có thể trông đơn giản, nhưng thực ra, nó giống như \"hôn&hellip;",
            "content_html": "<h2 data-pm-slice=\"1 1 []\">Tính kế thừa trong Java: Dựng \"extends\" và chuyện \"Con nhà người ta\"</h2>\n<p><img loading=\"lazy\" src=\"https://previews.123rf.com/images/millaf/millaf1907/millaf190700215/127100424-funny-redhead-smart-kid-boy-in-classroom-on-chalkboard-background-with-science-formulas-back-to.jpg\" alt=\"Funny Redhead Smart Kid Boy In Classroom On Chalkboard Background With  Science Formulas. Back To School Concept Stock Photo, Picture and Royalty  Free Image. Image 127100424.\" data-is-external-image=\"true\"></p>\n<p data-pm-slice=\"1 1 []\">Khi nhắc đến kế thừa trong Java, đa phần chúng ta nghĩ ngay đến từ khóa <code><strong>extends</strong></code>. Từ khóa này có thể trông đơn giản, nhưng thực ra, nó giống như \"hôn chìa khóa vàng\", giúp mở rộng thế giới của class \"con\" thành không giới hạn nhờ những tài sản đã có trong class \"cha\".</p>\n<h3 data-pm-slice=\"1 1 []\">1. Kế thừa là gì?</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://sme.misa.vn/wp-content/uploads/2020/08/tinh-ke-thua-trong-cac-doanh-nghiep-gia-dinh-1.jpg\" alt=\"Tính kế thừa trong các doanh nghiệp gia đình - MISA SME\" width=\"600\" height=\"392\" data-is-external-image=\"true\"></figure>\n<p data-pm-slice=\"1 3 []\">Hãy hình dung: Bạn sinh ra trong một gia đình giàu nứt đố đổ vách. Cha mẹ bạn sở hữu nhà cửa, xe hơi, thậm chí cả đảo riêng. Khi trưởng thành, bạn chỉ cần \"kế thừa\" tài sản của họ là xong. Trong lập trình, kế thừa cũng vậy! Một class \"con\" sẽ tự động nhận được các <strong>thuộc tính</strong> và <strong>phương thức</strong> từ class \"cha\", và thế là: \"Cứ thế mà phát triển\".</p>\n<p><strong>Điều cần nhớ:</strong></p>\n<ol>\n<li>Class \"con\" sẽ không được đụng đến <strong>tài sản riêng</strong> (<code>private</code>). Nếu muốn sử dụng, nó phải \"xin phép\" thông qua getter và setter. Nói chung, đây là những thứ chỉ có trong \"hộp đen bí mật\" của \"cha\".</li>\n<li>Từ khóa cho tất cả chuyện này là <code><strong>extends</strong></code>.</li>\n</ol>\n<h3 data-pm-slice=\"1 1 []\">2. Cách sử dụng từ khóa <code>extends</code></h3>\n<p>Việc thừa kế siêu đơn giản với từ khóa <strong>extends</strong>:</p>\n<p class=\"msg msg--highlight \"><code>class Cha {</code><br><code>    String hoTen = \"Người cha vĩ đại\";</code><br><br><code>    void hello() {</code><br><code>        System.out.println(\"Cha nói: Xin chào các con!\");</code><br><code>    }</code><br><code>}</code><br><br><code>class Con extends Cha {</code><br><code>    void gioiThieu() {</code><br><code>        System.out.println(\"Tên tôi là \" + hoTen);</code><br><code>    }</code><br><code>}</code><br><br><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        Con con = new Con();</code><br><code>        con.hello(); // Kết quả: Cha nói: Xin chào các con!</code><br><code>        con.gioiThieu(); // Kết quả: Tên tôi là Người cha vĩ đại</code><br><code>    }</code><br><code>}</code></p>\n<p class=\"msg msg--highlight \" data-pm-slice=\"1 1 []\">Thật là lý tưởng, Class <code>Con</code> thành công thừa hưởng mà không cần copy bất cứ dòng code nào từ Class <code>Cha</code>. \"Con nhà người ta\" là đây chứ đâu!</p>\n<h3 data-pm-slice=\"1 3 []\">3. Lợi ích của kế thừa</h3>\n<p><img loading=\"lazy\" src=\"https://infina.vn/blog/wp-content/uploads/2022/10/loi-ich-quoc-gia-la-gi.jpg\" alt=\"Lợi ích là gì? Tất tần tật các kiến thức về lợi ích bổ ích\" data-is-external-image=\"true\"></p>\n<p data-pm-slice=\"1 1 []\">Đây chính là \"nóc nhà\" của lập trình hướng đối tượng. Nếu bạn thắc mắc liệu kế thừa có thực sự cần thiết, thì đây là câu trả lời bằng vàng:</p>\n<ol data-spread=\"false\">\n<li>\n<p><strong>Giảm tải công việc viết code</strong>: Thay vì viết lại các đoạn code giống nhau ở mỗi class, bạn chỉ cần định nghĩa một lần ở class \"cha\".</p>\n</li>\n<li>\n<p><strong>Tái sử dụng logic một cách thông minh</strong>: \"Cha\" chia sẻ mọi thứ \"ngon lành\" với \"Con\", giúp hệ thống đồng bộ, đỡ nhọc công.</p>\n</li>\n<li>\n<p><strong>Tính mở rộng và bảo trì cực dễ dàng</strong>: Chỉ cần sửa ở \"cha\" là \"con\" được hưởng lợi.</p>\n</li>\n</ol>\n<p>Với những lợi ích này, kế thừa giúp cuộc đời lập trình viên đẹp như mơ (mặc dù đôi khi cũng có chút drama khi debug)</p>\n<p> </p>\n<h3 data-pm-slice=\"1 1 []\">4. Ví dụ thực tế</h3>\n<p data-pm-slice=\"1 1 []\">Bạn đang làm một game RPG và cần quản lý nhân vật của mình. Một \"Phép Sư\" tất nhiên phải biết dùng phép thuật, nhưng điều đó không có nghĩa là bạn phải viết lại từ đầu! Hãy xem đây:</p>\n<p class=\"msg msg--highlight \" data-pm-slice=\"1 1 []\"><code>class NhanVat {<br>    String ten;<br>    int mau;<br><br>    void tanCong() {<br>        System.out.println(ten + \" tấn công!\");<br>    }<br>}<br><br>class PhepSi extends NhanVat {<br>    void dungPhep() {<br>        System.out.println(ten + \" phát động ma pháp và tung chùi skill siêu đẹp!\");<br>    }<br>}<br><br>public class Game {<br>    public static void main(String[] args) {<br>        PhepSi harry = new PhepSi();<br>        harry.ten = \"Harry Potter\";<br>        harry.mau = 100;<br>        harry.tanCong();<br>        harry.dungPhep();<br>    }<br>}</code></p>\n<p class=\"msg msg--highlight \" data-pm-slice=\"1 1 []\">Trong trường hợp này, Class <code>PhepSi</code> thừa hưởng các tính năng chung như <code>ten</code> và <code>tanCong</code> từ Class <code>NhanVat</code>, đồng thời bổ sung thêm chiêu thức riêng \"đã tay\" như dùng phép thuật.</p>\n<p data-pm-slice=\"1 1 []\">Kế thừa trong Java không chỉ giúp giảm gánh nặng code mà còn giúp project của bạn dễ dàng bảo trì và phát triển. Việc hiểu được <code><strong>extends</strong></code> sẽ giúp bạn trở thành \"lãnh chúa\" trong vùng lập trình!</p>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-29T09:48:50+07:00",
            "date_modified": "2024-12-30T15:40:27+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-6-gioi-thieu-ve-javascript.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-6-gioi-thieu-ve-javascript.html",
            "title": "Bài 6: Giới thiệu về JavaScript",
            "summary": "JavaScript – Câu Chuyện Kỳ Diệu Đằng Sau Màn Hình Website! Nếu HTML là \"bộ xương\" của một trang web, CSS là \"trang phục\" thì JavaScript chính là \"bộ não\" – nơi mọi phép màu bắt đầu diễn ra! JavaScript (JS) mang lại cho trang&hellip;",
            "content_html": "<h3>JavaScript – Câu Chuyện Kỳ Diệu Đằng Sau Màn Hình Website!</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/6/idea-mew.png\" alt=\"\" width=\"547\" height=\"547\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/6/responsive/idea-mew-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/6/responsive/idea-mew-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/6/responsive/idea-mew-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/6/responsive/idea-mew-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/6/responsive/idea-mew-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/6/responsive/idea-mew-2xl.png 1920w\"></figure>\n<p>Nếu HTML là \"bộ xương\" của một trang web, CSS là \"trang phục\" thì JavaScript chính là \"bộ não\" – nơi mọi phép màu bắt đầu diễn ra! JavaScript (JS) mang lại cho trang web của chúng ta sức sống, khiến mọi thứ trở nên thú vị hơn, từ hiệu ứng chuyển động, cập nhật thời gian thực, đến những trò chơi hoặc ứng dụng cực đỉnh.</p>\n<h2><strong>JavaScript là gì?</strong></h2>\n<p><img loading=\"lazy\" src=\"https://codersguild.net/media/k2/items/cache/620466077c427f141effa294382f5fba_L.jpg\" alt=\"What is JavaScript? A Comprehensive Introduction\" data-is-external-image=\"true\"></p>\n<p>JavaScript (không liên quan gì đến Java đâu nha) là một ngôn ngữ lập trình mạnh mẽ, được thiết kế chủ yếu để làm cho các trang web trở nên tương tác hơn. Bạn thích một nút bấm lấp lánh? Hay một ô chat \"ảo ma Canada\" tự động gửi tin nhắn trả lời? JavaScript chính là thứ làm được điều đó.</p>\n<p>Điểm mạnh của JavaScript nằm ở khả năng:</p>\n<ol>\n<li>Tương tác với HTML và CSS để tạo hiệu ứng mượt mà.</li>\n<li>Xử lý sự kiện: Như khi bạn bấm, rê chuột, hay nhập text.</li>\n<li>Tích hợp với các API: Từ việc gọi thời tiết đến việc hiển thị bản đồ thế giới!</li>\n</ol>\n<p><strong>Kết quả cuối cùng?</strong> Website không chỉ là nơi bạn đọc thông tin – mà trở thành \"đối tác giao tiếp\"!</p>\n<h2><strong>Vai trò của JavaScript trong web development?</strong></h2>\n<p><img loading=\"lazy\" src=\"https://wiki.tino.org/wp-content/uploads/2022/03/word-image-43.png\" alt=\"JavaScript là gì? Có nên học JavaScript hay không?\" data-is-external-image=\"true\"></p>\n<p>Nếu ví website là một vũ trụ nhỏ, thì đây là vai trò của các thành phần:</p>\n<ol>\n<li><strong>HTML</strong>: Khung xương vũ trụ. Tất cả các hành tinh, tàu bay, robot đều được xác định từ đây.</li>\n<li><strong>CSS</strong>: Biến chúng thành <em>những siêu mẫu</em>. Robot thì trông bóng bẩy, tàu bay thì được trang trí đèn led.</li>\n<li><strong>JavaScript</strong>: Thổi hồn vào vũ trụ. Robot không chỉ đẹp mà còn nhảy được điệu <em>Gangnam Style</em>!</li>\n</ol>\n<p><strong>Các tính năng cụ thể JS mang lại:</strong></p>\n<ol>\n<li><strong>Kiểm tra form trực tuyến:</strong> Ngăn người dùng đăng ký mà quên nhập mật khẩu.</li>\n<li><strong>Hiệu ứng động:</strong> Slider hình ảnh chuyển động mượt mà, video tự động phát.</li>\n<li><strong>Tương tác thời gian thực:</strong> Hiển thị thông tin thời tiết theo thời gian thực hoặc tải thêm sản phẩm khi bạn cuộn chuột.</li>\n<li><strong>Ứng dụng web phức tạp:</strong> Gmail, Facebook, và Netflix đều sử dụng JavaScript đó!</li>\n</ol>\n<p>Tóm lại, nếu không có JavaScript, thế giới web sẽ tẻ nhạt biết bao.</p>\n<h2><strong>Chạy JavaScript – 3 cách vui nhộn để bắt đầu</strong></h2>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ7dEn_2zQbCnwTmd5kYpFrzXptva1p65cK5Q&amp;s\" alt=\"Sexual Jokes - Three-Way - Wattpad\" width=\"276\" height=\"255\" data-is-external-image=\"true\"></figure>\n<p>Bạn là lính mới tò te và chưa biết phải làm gì? Đừng lo! Dưới đây là 3 cách dễ dàng để chạy JavaScript:</p>\n<h3><strong>1. Inline (Dòng nội tuyến):</strong></h3>\n<p>Cách này cực nhanh và đơn giản, nhưng giống như uống mì tôm. Bạn thêm JavaScript trực tiếp vào thẻ HTML bằng thuộc tính <code>onclick</code>, <code>onmouseover</code>, v.v.</p>\n<p>Ví dụ: Tạo nút bấm:</p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>  &lt;title&gt;Inline JavaScript&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;button onclick=\"alert('Chào mừng đến với thế giới JavaScript!')\"&gt;Nhấn tôi đi&lt;/button&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></p>\n<p class=\"msg msg--highlight \"><strong>Kết quả: </strong>Khi bạn nhấn nút, trình duyệt bật một hộp thoại \"ảo diệu\". </p>\n<div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\">\n<div class=\"sticky top-9 md:top-[5.75rem]\">\n<div class=\"absolute bottom-0 right-2 flex h-9 items-center\">\n<div>\n<p class=\"msg msg--success msg--warning\"><strong>Nhược điểm:</strong> Không nên lạm dụng vì inline JS khiến mã của bạn khó quản lý nếu trang web lớn.</p>\n</div>\n<div> </div>\n<h3><strong>2. Internal (Trong file HTML):</strong></h3>\n<p>JavaScript được viết trong cặp thẻ <code>&lt;script&gt;</code> trong phần <code>&lt;head&gt;</code> hoặc ngay trên <code>&lt;body&gt;</code>.</p>\n<p><strong>Ví dụ: Hô biến nút đổi màu siêu vui:</strong></p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>  &lt;title&gt;Internal JavaScript&lt;/title&gt;<br>  &lt;script&gt;<br>    function doiMauNen() {<br>      document.body.style.backgroundColor = \"yellow\";<br>    }<br>  &lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;button onclick=\"doiMauNen()\"&gt;Nhấn để đổi màu nền&lt;/button&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \"><strong>Kết quả:</strong> Sau khi nhấn nút, nền của website biến thành màu vàng chanh tươi roi rói. </p>\n<h3><strong>3. External File (File bên ngoài):</strong></h3>\n<p>Đây là cách chuyên nghiệp và được khuyên dùng. Bạn đặt mã JavaScript trong một file <code>.js</code> riêng biệt và liên kết với HTML bằng thẻ <code>&lt;script&gt;</code> trong phần <code>&lt;head&gt;</code> hoặc cuối <code>&lt;body&gt;</code>.</p>\n<p><strong>Bước 1: Tạo file <code>magic.js</code> (nội dung như sau):</strong></p>\n<p class=\"msg msg--highlight \"><code>function xinChao() {<br>    alert(\"Hello từ file .js!\");<br>}</code></p>\n<p><strong>Bước 2: Thêm script vào file HTML:</strong></p>\n<p class=\"msg msg--highlight \"><code>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>  &lt;title&gt;External JavaScript&lt;/title&gt;<br>  &lt;script src=\"magic.js\"&gt;&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;button onclick=\"xinChao()\"&gt;Bấm thử nào!&lt;/button&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></p>\n<p class=\"msg msg--highlight \"><strong>Kết quả:</strong> Một hộp thoại hiện lên khi bạn nhấn nút, chính xác như kỳ vọng.</p>\n<p class=\"msg msg--highlight \"><strong>Ưu điểm:</strong> Code gọn gàng, dễ bảo trì, và tái sử dụng giữa nhiều trang web.</p>\n<h2><strong>Chọn cách chạy JavaScript nào?</strong></h2>\n<p><img loading=\"lazy\" src=\"https://media.istockphoto.com/id/1132758418/photo/close-up-portrait-of-her-she-nice-attractive-puzzled-ignorant-wavy-haired-girl-showing.jpg?s=612x612&amp;w=0&amp;k=20&amp;c=3G3eEg2RHg6AmVDbZCIzVo3n-1kFnE-61sgH3qDdyIo=\" alt=\"417,700+ Confuse Stock Photos, Pictures &amp; Royalty-Free Images - iStock |  Confuse man, Man confuse, Woman confuse\" data-is-external-image=\"true\"></p>\n<br><strong>Dự án nhỏ:</strong> Inline hoặc Internal, nhanh chóng và không cầu kỳ.<br><strong>Dự án lớn, chuyên nghiệp:</strong> External file là chân ái, giúp bạn phân chia rõ ràng công việc.<br>\n<h2><strong>Câu chuyện từ đời thực</strong></h2>\n<p>Hãy tưởng tượng bạn có một website bán pizza siêu chất, và bạn muốn khách hàng:</p>\n<ol>\n<li>Nhấn nút để đặt ngay pizza yêu thích.</li>\n<li>Chọn loại topping từ danh sách xuất hiện nhanh chóng.</li>\n<li>Cái hay là họ không cần tải lại trang!</li>\n</ol>\n<p>JavaScript sẽ là \"anh hùng cứu thế\" giúp bạn làm tất cả điều đó: thêm sự kiện, hiển thị nội dung, và cập nhật trạng thái trang.</p>\n</div>\n</div>\n</div>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-28T21:35:55+07:00",
            "date_modified": "2024-12-30T15:40:19+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/toi-da-hoc-java-nhu-the-nao.html",
            "url": "https://kendarkmode.github.io/myblog1/toi-da-hoc-java-nhu-the-nao.html",
            "title": "Tôi đã học java như thế nào?",
            "summary": "Chia Sẻ Quá Trình Học Java Của Mình Học Java là một hành trình đầy thử thách nhưng cũng vô cùng thú vị. Mình bắt đầu học Java từ những kiến thức cơ bản nhất, như cấu trúc dữ liệu, cú pháp ngôn ngữ, và&hellip;",
            "content_html": "<p><strong>Chia Sẻ Quá Trình Học Java Của Mình</strong></p>\n<p><img loading=\"lazy\" src=\"https://might-could.com/wp-content/uploads/2013/05/Sharing-your-process-800.jpg\" alt=\"Share the Process – Might Could Studios\" data-is-external-image=\"true\"></p>\n<p>Học Java là một hành trình đầy thử thách nhưng cũng vô cùng thú vị. Mình bắt đầu học Java từ những kiến thức cơ bản nhất, như cấu trúc dữ liệu, cú pháp ngôn ngữ, và khái niệm lập trình hướng đối tượng. Việc hiểu được cách làm việc của các lớp, đối tượng, và các phương thức trong Java đã mở ra cho mình một cách nhìn mới về lập trình.</p>\n<p>Không chỉ học lý thuyết, mình cũng thực hành rất nhiều qua các bài tập và dự án nhỏ. Những thử thách này giúp mình áp dụng những gì đã học vào thực tế và giải quyết các vấn đề cụ thể, từ việc xây dựng các chương trình đơn giản đến việc phát triển các ứng dụng có tính năng phức tạp hơn.</p>\n<p>Trong quá trình học, mình cũng tham gia vào các nhóm học tập, chia sẻ kinh nghiệm và giải đáp thắc mắc cùng các bạn. Đây là một cách tuyệt vời để cải thiện kỹ năng của mình và học hỏi những kỹ thuật mới từ những người khác. Nếu bạn cũng đang trên hành trình học Java, mình tin rằng quá trình học sẽ vừa thử thách vừa thú vị và đem lại nhiều điều bổ ích cho bạn.</p>\n<p>Hãy xem qua một số thành tựu mình đã đạt được nhá!</p>\n<p> </p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/5/Screenshot-2024-12-29-112739.png\" alt=\"\" width=\"630\" height=\"451\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-2xl.png 1920w\"></figure>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/5/Screenshot-2024-12-29-112739-2.png\" alt=\"\" width=\"627\" height=\"416\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-2-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-2-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-2-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-2-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-2-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/5/responsive/Screenshot-2024-12-29-112739-2-2xl.png 1920w\"></figure>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-26T13:42:13+07:00",
            "date_modified": "2024-12-30T15:39:38+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-4-lop-va-doi-tuong-trong-java.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-4-lop-va-doi-tuong-trong-java.html",
            "title": "Bài 4: Lớp và đối tượng trong Java",
            "summary": "Khám phá Thế Giới Lớp và Đối Tượng Trong Java – Câu Chuyện Của Những \"Người Bạn\" Code Bạn có bao giờ cảm thấy lập trình Java giống như việc tạo dựng một thế giới nhỏ của riêng mình? Chúng ta có những lớp học,&hellip;",
            "content_html": "<h3>Khám phá Thế Giới Lớp và Đối Tượng Trong Java – Câu Chuyện Của Những \"Người Bạn\" Code</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/4/idea-mew.png\" alt=\"\" width=\"530\" height=\"405\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/4/responsive/idea-mew-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/4/responsive/idea-mew-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/4/responsive/idea-mew-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/4/responsive/idea-mew-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/4/responsive/idea-mew-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/4/responsive/idea-mew-2xl.png 1920w\"></figure>\n<p>Bạn có bao giờ cảm thấy lập trình Java giống như việc tạo dựng một thế giới nhỏ của riêng mình? Chúng ta có những lớp học, những đối tượng với cá tính riêng, và thậm chí cả những công cụ \"phép thuật\" để xây dựng chúng. Hãy cùng khám phá câu chuyện thú vị này nhé!<br><br></p>\n<h2>Lớp (Class) – \"Kiến trúc sư tài ba\"</h2>\n<p><img loading=\"lazy\" src=\"https://customcartoongifts.com/wp-content/uploads/2020/10/designer-cartoon-1.png\" alt=\"Design Architect Cartoon | Funny Gift for Design Architect\" data-is-external-image=\"true\"></p>\n<p>Lớp trong Java giống như một bản thiết kế cho những gì bạn muốn tạo ra. Giống như một kiến trúc sư vẽ ra ngôi nhà trước khi xây, lớp định nghĩa mọi chi tiết cho các đối tượng của bạn.<br>Ví dụ:</p>\n<p class=\"msg msg--highlight \"><code>class XeMay {<br>    String ten;  // Tên xe<br>    int tocDo;   // Tốc độ tối đa<br>}</code></p>\n<p class=\"msg msg--highlight \">Đây là bản thiết kế cho những chiếc xe máy trong thế giới Java của bạn.</p>\n<h2>Đối tượng (Object) – \"Thực thể sống động\"</h2>\n<p> </p>\n<p>Nếu lớp là bản thiết kế, thì đối tượng chính là sản phẩm cuối cùng – một chiếc xe máy \"ra đời\" từ bản thiết kế đó. Và điều tuyệt vời nhất là, mỗi đối tượng đều có tính cách riêng!</p>\n<p>Hãy xem cách chúng ta tạo ra một \"siêu phẩm\":</p>\n<p class=\"msg msg--highlight \"><code>public class Main {<br>    public static void main(String[] args) {<br>        XeMay honda = new XeMay();  // Tạo một đối tượng xe máy<br>        honda.ten = \"Honda Winner X\";<br>        honda.tocDo = 150;<br>        <br>        System.out.println(\"Tên xe: \" + honda.ten);<br>        System.out.println(\"Tốc độ tối đa: \" + honda.tocDo + \" km/h\");<br>    }<br>}<br>Output:</code><br><code>Tên xe: Honda Winner X</code><br><code>Tốc độ tối đa: 150 km/h</code></p>\n<p class=\"msg msg--highlight \"><code>Honda Winner X không chỉ có tên gọi, mà còn \"chạy\" cực nhanh!</code></p>\n<h3>Constructor – \"Người mẹ của các đối tượng\"</h3>\n<p>Constructor giống như bác sĩ đỡ đẻ, giúp đối tượng của bạn ra đời.</p>\n<p class=\"msg msg--highlight \"><code>class XeMay {<br>    String ten;<br>    int tocDo;<br><br>    // Constructor<br>    XeMay(String tenXe, int tocDoXe) {<br>        ten = tenXe;<br>        tocDo = tocDoXe;<br>    }<br>}</code></p>\n<p class=\"msg msg--highlight \">Với constructor, việc tạo đối tượng trở nên \"chanh sả\" hơn:</p>\n<h2>\"Drama\" Của Các Biến</h2>\n<p><img loading=\"lazy\" src=\"https://cdn.noron.vn/2021/08/30/drama-la-gi-2-1630294934.jpg\" alt=\"Hít Drama&quot; là gì mà tại sao người ta thích thú làm việc ấy thế?\" data-is-external-image=\"true\"></p>\n<p>Java có ba loại biến chính – mỗi loại đều \"drama\" theo cách riêng:</p>\n<ol>\n<li><strong>Biến Local (Biến nội bộ)</strong>:<br>Những biến này chỉ xuất hiện trong các phương thức, và \"biến mất\" ngay khi phương thức kết thúc.</li>\n<li><strong>Biến Instance</strong>:<br>Những biến này thuộc về đối tượng và tồn tại suốt \"cuộc đời\" của đối tượng đó.</li>\n<li><strong>Biến Class (static)</strong>:<br>Đây là kiểu \"kẻ nổi tiếng\" vì nó thuộc về cả lớp, không phải riêng một đối tượng nào!</li>\n</ol>\n<h3>Câu chuyện của những chiếc xe đua siêu tốc</h3>\n<p>Hãy tưởng tượng bạn tạo ra một trường đua với hai chiếc xe siêu tốc. Ai sẽ chiến thắng?</p>\n<p class=\"msg msg--highlight \"><code>class XeDua {<br>    String ten;<br>    int tocDo;<br><br>    void duaXe() {<br>        System.out.println(ten + \" đang chạy với tốc độ \" + tocDo + \" km/h!\");<br>    }<br>}<br><br>public class Main {<br>    public static void main(String[] args) {<br>        XeDua ferrari = new XeDua();<br>        XeDua lamborghini = new XeDua();<br><br>        ferrari.ten = \"Ferrari\";<br>        ferrari.tocDo = 300;<br><br>        lamborghini.ten = \"Lamborghini\";<br>        lamborghini.tocDo = 320;<br><br>        ferrari.duaXe();<br>        lamborghini.duaXe();<br><br>        if (ferrari.tocDo &gt; lamborghini.tocDo) {<br>            System.out.println(\"Ferrari thắng cuộc!\");<br>        } else {<br>            System.out.println(\"Lamborghini thắng cuộc!\");<br>        }<br>    }<br>}<br>Output:</code><br><code>Ferrari đang chạy với tốc độ 300 km/h!</code><br><code>Lamborghini đang chạy với tốc độ 320 km/h!</code><br><code>Lamborghini thắng cuộc!</code></p>\n<h2>Kết luận</h2>\n<p>Học Java không chỉ là về cú pháp và các hàm, mà còn là về việc tạo ra những thế giới nhỏ của riêng bạn. Từ việc thiết kế lớp đến \"hô biến\" đối tượng, mọi thứ đều là một chuyến phiêu lưu thú vị.</p>\n<p>Hãy cùng bắt đầu tạo nên thế giới của bạn với Java</p>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-26T12:59:56+07:00",
            "date_modified": "2024-12-29T09:49:05+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-3-cau-truc-dieu-kien-va-vong-lap.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-3-cau-truc-dieu-kien-va-vong-lap.html",
            "title": "Bài 3: Cấu trúc điều kiện và vòng lặp",
            "summary": "Phần 1: Cấu trúc điều kiện – Đưa ra những lựa chọn Bạn đã bao giờ đứng trước một loạt lựa chọn và không biết chọn đường nào chưa? Java cũng thế! Nhưng nhờ có các câu lệnh điều kiện, Java biết cách đưa ra&hellip;",
            "content_html": "<h3>Phần 1: Cấu trúc điều kiện – Đưa ra những lựa chọn</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://static.vecteezy.com/system/resources/previews/028/336/476/non_2x/trendy-choose-option-vector.jpg\" alt=\"Trendy Choose Option 28336476 Vector Art at Vecteezy\" width=\"541\" height=\"541\" data-is-external-image=\"true\"></figure>\n<p>Bạn đã bao giờ đứng trước một loạt lựa chọn và không biết chọn đường nào chưa? Java cũng thế! Nhưng nhờ có các <strong>câu lệnh điều kiện</strong>, Java biết cách đưa ra quyết định nhanh như chớp!</p>\n<h4><strong>If - Else</strong>: Câu chuyện của điều kiện</h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/3/idea-mew-2.png\" alt=\"\" width=\"558\" height=\"252\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/3/responsive/idea-mew-2-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/idea-mew-2-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/idea-mew-2-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/idea-mew-2-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/idea-mew-2-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/idea-mew-2-2xl.png 1920w\"></figure>\n<p>Nếu bạn bảo Java kiểm tra một điều kiện, nó sẽ nghe lời bạn. Nếu đúng, nó thực hiện một hành động, còn nếu không, nó đi hướng khác.</p>\n<p>Code ví dụ cho bạn:</p>\n<p class=\"msg msg--highlight \"><code>public class Main {<br>    public static void main(String[] args) {<br>        int weather = 25; // Nhiệt độ hiện tại<br><br>        if (weather &gt; 30) {<br>            System.out.println(\"Hôm nay nóng lắm! Đi bơi thôi!\");<br>        } else {<br>            System.out.println(\"Thời tiết mát mẻ, ra ngoài picnic đi!\");<br>        }<br>    }<br>}</code></p>\n<p class=\"msg msg--highlight \">Khi chạy, Java như một người bạn tri kỷ biết khuyên bạn nên đi đâu mỗi ngày! </p>\n<h4><strong>Switch-Case</strong>: Khi mọi thứ đã được định trước</h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/3/plan.png\" alt=\"\" width=\"1455\" height=\"632\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/3/responsive/plan-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/plan-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/plan-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/plan-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/plan-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/3/responsive/plan-2xl.png 1920w\"></figure>\n<p>Bạn có một danh sách dài các lựa chọn? <strong>Switch-Case</strong> là cỗ máy thời gian đưa chương trình của bạn đến <strong>đúng nơi nó cần đến</strong>.</p>\n<p>Đây là code cho bạn hình dung:</p>\n<p class=\"msg msg--highlight \"><code>public class Main {<br>    public static void main(String[] args) {<br>        String day = \"Monday\";<br><br>        switch (day) {<br>            case \"Monday\":<br>                System.out.println(\"Bắt đầu tuần mới với cafe!\");<br>                break;<br>            case \"Friday\":<br>                System.out.println(\"Thứ Sáu rồi, hết tuần thôi nào!\");<br>                break;<br>            default:<br>                System.out.println(\"Một ngày bình thường thôi mà!\");<br>        }<br>    }<br>}<br></code></p>\n<p class=\"msg msg--highlight \"><strong>Bạn biết không?</strong> <code>Switch-Case</code> cực kỳ gọn gàng để xử lý các lựa chọn phức tạp mà không phải viết quá nhiều câu lệnh <strong>if-else</strong>.</p>\n<h3>Phần 2: Vòng lặp – Điểm danh, kiểm tra và... lặp đi lặp lại!</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://i.redd.it/65jxyoe4ox701.jpg\" alt=\"Back to work loop : r/funny\" width=\"498\" height=\"498\" data-is-external-image=\"true\"></figure>\n<p>Java rất siêng năng và thích làm việc theo chu kỳ, nên vòng lặp là \"hộp công cụ\" số một để Java làm việc hiệu quả. </p>\n<h4><strong>For Loop</strong> – Khi bạn muốn kiểm soát mọi thứ</h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://thrivingmindseducation.com/cdn/shop/files/Screenshot2024-07-19at6.12.40pm.png?v=1721384036\" alt=\"Everything is under Ctrl'' Pin – Thriving Minds Education\" width=\"430\" height=\"436\" data-is-external-image=\"true\"></figure>\n<p>Bạn có một danh sách các việc cần làm và muốn kiểm tra từng cái một? <strong>For Loop</strong> là trợ thủ đắc lực của bạn!</p>\n<p>Đây là code giúp bạn có thể hiểu qua:</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        for (int i = 1; i &lt;= 5; i++) {</code><br><code>            System.out.println(\"Đếm thử: \" + i);</code><br><code>        }</code><br><code>        System.out.println(\"Vòng lặp đã hoàn thành!\");</code><br><code>    }</code><br><code>}</code></p>\n<p class=\"msg msg--highlight \">Trong vòng lặp trên, Java sẽ tự động <strong>đếm số</strong>, bạn chẳng cần bận tâm đến từng bước nhỏ nữa.</p>\n<h4><strong>While Loop</strong> – Khi công việc chưa xong, hãy tiếp tục!</h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://www.photolibrary.jp/mhd3/img515/450-20170303164035109852.jpg\" alt=\"ビジネスイメージ―継続か断念か 写真素材 [ 4922849 ] - フォトライブラリー photolibrary\" width=\"494\" height=\"329\" data-is-external-image=\"true\"></figure>\n<p> </p>\n<p>Bạn cứ làm việc cho đến khi công việc hoàn thành, đó là phong cách của <code>while</code>. Đây là cách nó giúp bạn:</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        int countdown = 5;</code><br><br><code>        while (countdown &gt; 0) {</code><br><code>            System.out.println(\"Đếm ngược: \" + countdown);</code><br><code>            countdown--; // Giảm dần</code><br><code>        }</code><br><code>        System.out.println(\"Chúc mừng năm mới!\");</code><br><code>    }</code><br><code>}</code></p>\n<p class=\"msg msg--highlight \">Rất lý tưởng khi làm việc với các trường hợp cần <strong>đếm thời gian chờ</strong> hoặc thực hiện một công việc cụ thể!</p>\n<h4><strong>Do-While Loop</strong> – Đừng bao giờ bỏ qua cơ hội đầu tiên!</h4>\n<p><img loading=\"lazy\" src=\"https://www.azquotes.com/picture-quotes/quote-never-neglect-an-opportunity-for-improvement-william-jones-130-80-75.jpg\" alt=\"William Jones quote: Never neglect an opportunity for improvement.\" data-is-external-image=\"true\"></p>\n<p>Không như <code>while</code>, vòng lặp <code>do-while</code> luôn <strong>chắc chắn thực hiện ít nhất một lần</strong>, bất kể điều kiện ra sao. Đó là tinh thần sống không bỏ lỡ cơ hội nào.</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        int i = 1;</code><br><br><code>        do {</code><br><code>            System.out.println(\"Bạn có chắc mình đã học xong chưa? Đây là lần \" + i);</code><br><code>            i++;</code><br><code>        } while (i &lt;= 3);</code><br><code>        System.out.println(\"Vậy là bạn đã học xong 3 vòng lặp!\");</code><br><code>    }</code><br><code>}</code></p>\n<p class=\"msg msg--highlight \">Chúng ta luôn nên thử ít nhất một lần trước khi từ bỏ, đúng không? </p>\n<h4>Tập hợp khả năng điều kiện và vòng lặp! </h4>\n<p>Điều gì sẽ xảy ra nếu bạn kết hợp <strong>if-else</strong> và <strong>vòng lặp</strong>? Một chương trình thông minh không giới hạn. Xem nhé:</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        for (int i = 1; i &lt;= 10; i++) {</code><br><code>            if (i % 2 == 0) {</code><br><code>                System.out.println(i + \" là số chẵn\");</code><br><code>            } else {</code><br><code>                System.out.println(i + \" là số lẻ\");</code><br><code>            }</code><br><code>        }</code><br><code>    }</code><br><code>}</code></p>\n<p class=\"msg msg--highlight \">Java như giáo viên toán \"hậu cần\", kiểm tra từng số từ 1 đến 10, xác định chẵn hay lẻ. Thật thông minh!</p>\n<h3><strong>Tóm lại</strong></h3>\n<p>Cấu trúc điều kiện và vòng lặp không chỉ giúp Java xử lý các bài toán linh hoạt, mà còn làm cho chương trình của bạn trở nên <strong>động</strong> và <strong>thông minh</strong> hơn. Điều kiện như não bộ đưa ra quyết định, còn vòng lặp là cơ bắp để hoàn thành công việc lặp đi lặp lại một cách kiên trì.</p>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-26T10:54:43+07:00",
            "date_modified": "2024-12-30T20:18:36+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-2-cac-kieu-du-lieu-trong-java.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-2-cac-kieu-du-lieu-trong-java.html",
            "title": "Bài 2: Các kiểu dữ liệu trong Java",
            "summary": "Chắc hẳn bạn cũng biết, khi lập trình bằng Java, một trong những yếu tố quan trọng là hiểu rõ về các kiểu dữ liệu. Hãy tưởng tượng các kiểu dữ liệu trong Java như một loạt các hộp với các kích thước và hình&hellip;",
            "content_html": "<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://img.freepik.com/free-vector/businessman-get-idea_1133-350.jpg\" alt=\"Idea Images - Free Download on Freepik\" width=\"602\" height=\"602\" data-is-external-image=\"true\"></figure>\n<p> </p>\n<p>Chắc hẳn bạn cũng biết, khi lập trình bằng Java, một trong những yếu tố quan trọng là hiểu rõ về các kiểu dữ liệu. Hãy tưởng tượng các kiểu dữ liệu trong Java như một loạt các hộp với các kích thước và hình dạng khác nhau, giúp bạn lưu trữ mọi giá trị trong chương trình. Giờ đây, chúng ta sẽ cùng khám phá một cách dễ hiểu và vui vẻ về chúng nhé!</p>\n<h1>Kiểu dữ liệu trong Java</h1>\n<p><img loading=\"lazy\" src=\"https://media.geeksforgeeks.org/wp-content/uploads/20240809125618/Java-Data-Types.png\" alt=\"Java Data Types - GeeksforGeeks\" data-is-external-image=\"true\"></p>\n<p>Biến trên thực tế là bộ nhớ để lưu một giá trị nào đó. Khi khai báo biến tức là ta đang khai báo với hệ thống dành riêng không gian trong bộ nhớ. Dựa trên kiểu dữ liệu của một biến, hệ điều hành cấp phát bộ nhớ và quyết định cái gì có thể được lưu giữ trong bộ nhớ dành riêng đó.</p>\n<p>Trong Java có 2 kiểu dữ liệu có sẵn: Primitive (kiểu dữ liệu gốc) và Non-primitive (kiểu dữ liệu đối tượng)</p>\n<p>Trước khi đi vào giới thiệu chi tiết về từng kiểu dữ liệu, bạn có thể theo dõi bảng tóm tắt sau:</p>\n<table>\n<tbody>\n<tr>\n<th>Kiểu dữ liệu</th>\n<th>Giá trị mặc định</th>\n<th>Kích cỡ mặc định</th>\n</tr>\n<tr>\n<td>boolean</td>\n<td>false</td>\n<td>1 bit</td>\n</tr>\n<tr>\n<td>char</td>\n<td>'\\u0000'</td>\n<td>2 byte</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>0</td>\n<td>1 byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>0</td>\n<td>2 byte</td>\n</tr>\n<tr>\n<td>int</td>\n<td>0</td>\n<td>4 byte</td>\n</tr>\n<tr>\n<td>long</td>\n<td>0L</td>\n<td>8 byte</td>\n</tr>\n<tr>\n<td>float</td>\n<td>0.0f</td>\n<td>4 byte</td>\n</tr>\n<tr>\n<td>double</td>\n<td>0.0d</td>\n<td>8 byte</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<h3>1. Kiểu dữ liệu Primitive - Những hộp nhỏ nhưng lợi hại!</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://media.istockphoto.com/id/483576367/photo/strength.jpg?s=612x612&amp;w=0&amp;k=20&amp;c=e1BOChNr3KkYy3uRJ1gxVpbnXP3C6EqoPpFYNbJS7ls=\" alt=\"56,300+ Small But Strong Stock Photos, Pictures &amp; Royalty-Free Images -  iStock | Small but powerful, Strength, Small power\" width=\"555\" height=\"417\" data-is-external-image=\"true\"></figure>\n<p>Trước tiên, chúng ta có kiểu dữ liệu gốc (Primitive), đây là những kiểu dữ liệu cơ bản mà Java cung cấp sẵn. Chúng giúp tiết kiệm bộ nhớ mà lại cực kỳ nhanh chóng. Đừng lo, chúng sẽ không làm bạn thất vọng đâu!</p>\n<h4>2.Kiểu dữ liệu Boolean – Lựa chọn duy nhất, bạn chỉ có thể chọn true hoặc false (Vâng, như câu chuyện trong tình yêu vậy - không có gì khác ngoài hai lựa chọn!).</h4>\n<p><img loading=\"lazy\" src=\"https://assets.genially.com/s3fs-public/True%20or%20false%20quizen.png?VersionId=8n146iYtGi0pMPHbrQ44GdzmwesWqBBU\" alt=\"True or false quiz | Genially templates\" data-is-external-image=\"true\"></p>\n<p>Với kích thước <strong>1 bit</strong>, kiểu dữ liệu  này giúp bạn quyết định, như trong đoạn mã dưới đây:</p>\n<div>\n<p class=\"msg msg--highlight \" dir=\"ltr\"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        boolean extractAll = true;</code><br><code>        System.out.println(extractAll ? \"Trích xuất thành công!\" : \"Trích xuất thất bại.\");</code><br><code>    }</code><br><code>}</code></p>\n</div>\n<h4>3. Kiểu dữ liệu Char – Thích sự đơn giản nhưng đầy mạnh mẽ? char là kiểu dành cho bạn</h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://sofontsy.com/cdn/shop/products/funny-banana-fruit-with-strong-arms-and-sunglasses-svg-tribaliumartsf-583701_1024x1024.jpg?v=1697234203\" alt=\"Funny banana fruit with strong arms and sunglasses. Clip Art silhouette  (eps, svg, pdf, png, dxf, jpeg). - So Fontsy\" width=\"600\" height=\"600\" data-is-external-image=\"true\"></figure>\n<p><code>char</code> là kiểu dành cho bạn, lưu trữ một ký tự đơn giản như 'A' hay ký tự đặc biệt nào đó, với <strong>2 byte</strong> bộ nhớ.</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        char name = 'A';</code><br><code>        System.out.println(\"Ký tự: \" + name);</code><br><code>    }</code><br><code>}</code><code></code></p>\n<h4>Byte, Short, Int và Long – Lưu trữ các con số, càng lớn càng mạnh mẽ!</h4>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/2/Screenshot-2024-12-26-144915.png\" alt=\"\" width=\"742\" height=\"612\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-144915-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-144915-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-144915-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-144915-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-144915-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-144915-2xl.png 1920w\"></figure>\n<ol>\n<li>Byte (1 byte) cho những con số nho nhỏ từ -128 đến 127. Chẳng hạn bạn có thể dùng khi chỉ cần lưu trữ số nhỏ.</li>\n<li>Short (2 byte) thích hợp hơn cho những số nằm trong dải từ -32,768 đến 32,767.</li>\n<li>Int (4 byte) là lựa chọn chính khi làm việc với số nguyên (rộng từ -2,147,483,648 đến 2,147,483,647).</li>\n<li>Long (8 byte) dành cho những con số to lớn, nếu bạn cần vượt qua các giới hạn của int.</li>\n</ol>\n<p>Hãy xem đoạn code dưới đây để thấy sự linh hoạt của chúng:</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        long a = 100000L;</code><br><code>        long b = -100000L;</code><br><code>        System.out.println(\"Giá trị của a: \" + a);</code><br><code>        System.out.println(\"Giá trị của b: \" + b);</code><br><code>    }</code><br><code>}</code></p>\n<div> </div>\n<h4>Float và Double – Kiểu dữ liệu cho những con số thập phân!</h4>\n<p><img loading=\"lazy\" src=\"https://cdn2.fptshop.com.vn/unsafe/Uploads/images/tin-tuc/165459/Originals/so-thap-phan-la-gi-1.png\" alt=\"Số thập phân là gì? Tìm hiểu số thập phân và &quot;bí mật&quot; đằng sau\" data-is-external-image=\"true\"></p>\n<p>Nếu bạn đang làm việc với các giá trị có phần thập phân, chẳng hạn như tiền tệ (dù nhớ là không nên dùng float cho số tiền!), bạn sẽ cần đến float (4 byte) và double (8 byte). Chúng giúp bạn lưu trữ các số với độ chính xác cao.</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        float jpy = 22.2f;</code><br><code>        double ct = 676.7;</code><br><code>        System.out.println(\"Giá trị của jpy: \" + jpy);</code><br><code>        System.out.println(\"Giá trị của ct: \" + ct);</code><br><code>    }</code><br><code>}</code></p>\n<div>\n<div dir=\"ltr\"> </div>\n</div>\n<h3>2. Kiểu dữ liệu Non-Primitive – Bắt đầu phiêu lưu cùng đối tượng!</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/2/Screenshot-2024-12-26-145045.png\" alt=\"\" width=\"453\" height=\"385\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-145045-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-145045-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-145045-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-145045-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-145045-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/2/responsive/Screenshot-2024-12-26-145045-2xl.png 1920w\"></figure>\n<p>Không chỉ dừng lại ở các kiểu dữ liệu nguyên thủy, Java còn cung cấp kiểu dữ liệu đối tượng, hay còn gọi là non-primitive. Các đối tượng này có thể là một chuỗi ký tự, một mảng, hay bất kỳ đối tượng nào bạn định nghĩa trong chương trình.</p>\n<h4>String – Chuỗi kỳ diệu</h4>\n<p><img loading=\"lazy\" src=\"https://previews.123rf.com/images/higyou/higyou1710/higyou171000030/87752174-space-fantasy-magic-energy-swirls-abstract-dark-background-horizontal.jpg\" alt=\"Space Fantasy Magic Energy Swirls Abstract, Dark Background, Horizontal  Stock Photo, Picture and Royalty Free Image. Image 87752174.\" data-is-external-image=\"true\"></p>\n<p>String là kiểu dữ liệu không thể thiếu trong bất kỳ dự án Java nào. Nó là nơi chứa đựng tất cả các chuỗi ký tự. Bạn có thể làm mọi thứ với String, từ việc ghép nối chuỗi đến việc tìm kiếm từ ngữ yêu thích. Và trên hết, chúng thật dễ dàng sử dụng:</p>\n<div dir=\"ltr\"><code>String message = \"Hello, Java!\";\n</code></div>\n<div dir=\"ltr\"><code>System.out.println(message.length()); </code></div>\n<div dir=\"ltr\"><code> // Kết quả: 12</code></div>\n<div>\n<div dir=\"ltr\"> </div>\n</div>\n<h4>Array – Mảng, chiếc hộp thần kỳ chứa nhiều giá trị!</h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://i.etsystatic.com/41975932/r/il/058da1/6040096352/il_570xN.6040096352_dm4x.jpg\" alt=\"Buy Magic Gift Box Clipart Mystical Magic Box Clipart Bundle 10  High-quality Designs Fantasy Art Printables Commercial Use Online in India  - Etsy\" width=\"570\" height=\"570\" data-is-external-image=\"true\"></figure>\n<p>Bạn có thể tưởng tượng mảng giống như một chiếc kệ sách với nhiều cuốn sách (giá trị) được sắp xếp theo thứ tự. Chúng cho phép bạn lưu trữ và truy cập vào bất kỳ phần tử nào trong số các giá trị đó theo chỉ số.</p>\n<p class=\"msg msg--highlight \"><code>public class Main {</code><br><code>    public static void main(String[] args) {</code><br><code>        int[] numbers = {1, 2, 3, 4, 5};</code><br><code>        for (int i = 0; i &lt; numbers.length; i++) {</code><br><code>            System.out.println(\"Phần tử tại chỉ mục \" + i + \": \" + numbers[i]);</code><br><code>        }</code><br><code>    }</code><br><code>}</code></p>\n<div>\n<div dir=\"ltr\"> </div>\n</div>\n<p>Java cung cấp cho chúng ta rất nhiều kiểu dữ liệu để lựa chọn, giúp chương trình của bạn có thể linh hoạt lưu trữ đủ loại thông tin. Từ các giá trị nguyên thủy như boolean, int đến những đối tượng như String và Array, bạn đều có thể dễ dàng sử dụng chúng để giải quyết mọi bài toán lập trình. Chúc bạn khám phá và chinh phục Java một cách thật thú vị! </p>\n<p>Hy vọng bạn sẽ tìm thấy bài viết này dễ hiểu và vui vẻ khi khám phá các kiểu dữ liệu trong Java! </p>\n<p> </p>\n<h3 id=\"_8-double-9\"></h3>\n<p> </p>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-26T10:53:34+07:00",
            "date_modified": "2024-12-30T15:38:56+07:00"
        },
        {
            "id": "https://kendarkmode.github.io/myblog1/bai-1-gioi-thieu-ve-java.html",
            "url": "https://kendarkmode.github.io/myblog1/bai-1-gioi-thieu-ve-java.html",
            "title": "Bài 1: Giới thiệu về Java",
            "summary": "Java – Ngôn Ngữ Lập Trình “Cực Cool” Cho Những Ai Đam Mê Công Nghệ! Chào các bạn, hôm nay chúng ta sẽ cùng tìm hiểu một ngôn ngữ lập trình vô cùng đặc biệt: Java! Bạn đã bao giờ nghe đến cái tên này&hellip;",
            "content_html": "<h1>Java – Ngôn Ngữ Lập Trình “Cực Cool” Cho Những Ai Đam Mê Công Nghệ! </h1>\n<p><img loading=\"lazy\" src=\"https://files.oaiusercontent.com/file-XoqhmoJbupAd3QAkaNkvfS?se=2024-12-26T07%3A05%3A17Z&amp;sp=r&amp;sv=2024-08-04&amp;sr=b&amp;rscc=max-age%3D604800%2C%20immutable%2C%20private&amp;rscd=attachment%3B%20filename%3D3f17b02c-7736-49ac-a1c0-c04a4ee0f7f3.webp&amp;sig=P%2BOBQlVWgo/TrJdXXVgsMMpwpiBqvo%2Bq3a4gycYLQ8M%3D\" alt=\"A creative and vibrant image representing the concept of Java programming. The image should feature a mix of elements such as a laptop, a code editor displaying Java code, the Java logo (a steaming coffee cup), and colorful coding symbols or icons to represent technology, programming, and innovation. The image should be modern, exciting, and tech-inspired, appealing to young tech enthusiasts and programmers.\" data-is-external-image=\"true\"></p>\n<p>Chào các bạn, hôm nay chúng ta sẽ cùng tìm hiểu một ngôn ngữ lập trình vô cùng đặc biệt: Java! Bạn đã bao giờ nghe đến cái tên này chưa? Nếu chưa, thì đã đến lúc bạn khám phá một “siêu anh hùng” trong thế giới lập trình rồi đó! 😄</p>\n<p>Java ra đời vào năm 1995, nhưng không phải vì thế mà nó “lỗi thời”. Ngược lại, Java ngày càng trở thành lựa chọn của vô số lập trình viên tài năng. Từ web, game, đến các ứng dụng di động, Java đều thể hiện “sức mạnh” của mình! 🎮📱</p>\n<h3>Tại Sao Java Lại “Cực Phẩm” Như Vậy?</h3>\n<p><img loading=\"lazy\" src=\"https://www.shutterstock.com/image-vector/business-man-lots-question-bubbles-600nw-593855477.jpg\" alt=\"9,288 Confused Person Sketch Royalty-Free Photos and Stock Images |  Shutterstock\" data-is-external-image=\"true\"></p>\n<h4> </h4>\n<h4>1. Đa Nền Tảng – Viết Một Lần, Chạy Mọi Nơi!</h4>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://kendarkmode.github.io/myblog1/media/posts/1/idea-mew.png\" alt=\"\" width=\"527\" height=\"316\" sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"https://kendarkmode.github.io/myblog1/media/posts/1/responsive/idea-mew-xs.png 640w ,https://kendarkmode.github.io/myblog1/media/posts/1/responsive/idea-mew-sm.png 768w ,https://kendarkmode.github.io/myblog1/media/posts/1/responsive/idea-mew-md.png 1024w ,https://kendarkmode.github.io/myblog1/media/posts/1/responsive/idea-mew-lg.png 1366w ,https://kendarkmode.github.io/myblog1/media/posts/1/responsive/idea-mew-xl.png 1600w ,https://kendarkmode.github.io/myblog1/media/posts/1/responsive/idea-mew-2xl.png 1920w\"></figure>\n<p>Điều đặc biệt nhất khi nhắc đến Java chính là khả năng đa nền tảng (cross-platform). Thử nghĩ mà xem, bạn viết code một lần, và nó có thể chạy trên bất kỳ hệ điều hành nào từ Windows, Mac đến Linux mà không cần chỉnh sửa gì cả. Nhờ vào Java Virtual Machine (JVM) thần thánh, ứng dụng của bạn chỉ cần “một lần làm là xong”. Thật tuyệt phải không? </p>\n<p> </p>\n<h4>2. Quản Lý Bộ Nhớ Tự Động – Bạn Thảnh Thơi Code, Java Lo Phần Còn Lại!</h4>\n<p><img loading=\"lazy\" src=\"https://www.shutterstock.com/image-vector/waiter-dressed-tuxedo-serving-dish-600nw-663844405.jpg\" alt=\"2,389 Cartoon Butler Stock Vectors and Vector Art | Shutterstock\" data-is-external-image=\"true\"></p>\n<p>Java có tính năng quản lý bộ nhớ tự động – điều này có nghĩa là nó sẽ tự động “dọn dẹp” bộ nhớ không cần thiết giúp bạn. Bạn có thể tập trung sáng tạo ra những ứng dụng hay ho mà chẳng cần lo lắng về việc mất bộ nhớ nữa. Chính xác là như có một trợ lý mãi bên cạnh bạn vậy! 🎉</p>\n<p> </p>\n<h4>3. Bảo Mật Cao – Đừng Lo Về Những Kẻ “Xâm Nhập”!</h4>\n<p><img loading=\"lazy\" src=\"https://media.istockphoto.com/id/174812474/photo/police-chief-officer-holding-gun-triggered-while-at-desk.jpg?s=612x612&amp;w=0&amp;k=20&amp;c=gHKYTVPmvaQCNMw-ubA22bHMJvO5zWxdtPRYo9HvXF4=\" alt=\"980+ Funny Security Guard Stock Photos, Pictures &amp; Royalty-Free Images -  iStock\" data-is-external-image=\"true\"></p>\n<p>Chắc chắn rằng bạn không muốn phần mềm của mình bị lỗ hổng bảo mật, đúng không? Đừng lo, Java cực kỳ chú trọng đến bảo mật. Nhờ các tính năng kiểm tra lỗi chặt chẽ, bạn có thể yên tâm rằng các ứng dụng của mình luôn an toàn, tránh được các mối nguy hại từ mã độc. </p>\n<p> </p>\n<h4>4. Đa Luồng – Chạy Nhanh Như Chớp!</h4>\n<p><img loading=\"lazy\" src=\"https://cdn.pixabay.com/photo/2020/01/31/14/21/funny-4808203_960_720.jpg\" alt=\"Download Funny, Running, Panic. Royalty-Free Stock Illustration Image -  Pixabay\" data-is-external-image=\"true\"></p>\n<p>Công việc của bạn có bao giờ yêu cầu xử lý cùng lúc nhiều tác vụ? Với Java, đó không phải là vấn đề! Hỗ trợ đa luồng giúp bạn thực hiện nhiều tác vụ cùng lúc mà không làm giảm hiệu suất. Càng làm việc nhanh, bạn càng tiến gần hơn đến những dự án “khủng”! </p>\n<p> </p>\n<h3>Cùng Nhận Xét Về Ưu Điểm và Nhược Điểm Của Java</h3>\n<p><img loading=\"lazy\" src=\"https://hrchannels.com/uptalent/attachments/images/20211115/155445516_viet-uu-diem-nhuoc-diem-vao-cv-3.png\" alt=\"Viết ưu - nhược điểm của bản thân trong CV sao cho khéo\" data-is-external-image=\"true\"></p>\n<h4>Ưu điểm:</h4>\n<p>Độ tin cậy cao: Java có một cộng đồng lớn và nhiều công cụ hỗ trợ, vì thế khả năng phát triển ứng dụng thành công là rất cao.</p>\n<p>Tính đa nền tảng: Viết một lần, chạy mọi nơi! Ứng dụng của bạn sẽ không phải lo lắng về hệ điều hành nào.</p>\n<p>Cộng đồng và tài nguyên vô cùng phong phú: Bạn sẽ không phải lạc lõng, vì luôn có rất nhiều tài liệu và người sẵn sàng giúp đỡ khi bạn gặp khó khăn.</p>\n<h4>Nhược điểm:</h4>\n<p>Tốc độ chậm hơn các ngôn ngữ khác: So với C++ hay Rust, Java có thể chạy hơi chậm một chút. Nhưng đừng lo, với sự tối ưu đúng cách, bạn hoàn toàn có thể khắc phục điều này.</p>\n<p>Sử dụng bộ nhớ nhiều hơn: Vì được quản lý bộ nhớ tự động, Java sẽ yêu cầu một ít bộ nhớ hơn so với một số ngôn ngữ khác, nhưng điều này lại giúp giảm bớt công việc cho lập trình viên.</p>\n<h3>Java – Người Bạn Đồng Hành Đáng Tin Cậy!</h3>\n<p><img loading=\"lazy\" src=\"https://pbs.twimg.com/media/GSYiK4OWoAA5QZJ.jpg\" alt=\"Darth Starrr (@DarthStarfire) / X\" data-is-external-image=\"true\"></p>\n<p> </p>\n<p>Kết luận, Java thực sự là một ngôn ngữ mạnh mẽ, lý tưởng cho những ai muốn xây dựng ứng dụng lớn và phức tạp. Những tính năng độc đáo như đa nền tảng, quản lý bộ nhớ tự động, và bảo mật cao sẽ giúp bạn phát triển phần mềm một cách nhanh chóng và dễ dàng hơn. Mặc dù có một số nhược điểm nhỏ như tốc độ hay lượng bộ nhớ sử dụng, nhưng với các công cụ và cộng đồng hỗ trợ mạnh mẽ, Java vẫn là lựa chọn tuyệt vời cho bất kỳ lập trình viên nào.</p>\n<p> </p>\n<p>Vậy, nếu bạn đang tìm kiếm một ngôn ngữ lập trình “vừa mạnh mẽ, vừa dễ sử dụng” để bắt đầu với thế giới công nghệ, Java chính là sự lựa chọn lý tưởng! </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "Nguyen Anh Kiet"
            },
            "tags": [
            ],
            "date_published": "2024-12-26T10:52:29+07:00",
            "date_modified": "2024-12-30T15:37:11+07:00"
        }
    ]
}
